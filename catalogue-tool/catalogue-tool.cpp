#include <iostream>
#include <fstream>
#include <string>

#include "../inc/constellation.h"
#include "henry_draper.h"
#include "hipparcos.h"
#include "messier.h"
#include "ngc2000.h"
#include "constel.h"

using namespace std;

#pragma pack(1)

int main()
{
	ofstream generated_file("../inc/constellation_data.generated.h");

	generated_file << "// this file was generated by the origami-sunset star catalog analyis tool." << endl;

	auto hd_data = loadHD("../catalog");
	auto hip_data = loadHIP("../catalog");
	auto mes_data = loadMes("../catalog");
	auto ngc_data = loadNGC("../catalog");

	auto constellations = loadConstellations("../catalog");

	size_t failures = 0;
	for (const CTNGCEntry& entry : ngc_data)
	{
		string constel_name = "NON";
		for (const auto& constel : constellations)
		{
			if (checkContains({ entry.ra, entry.dec }, constel))
			{
				constel_name = constel.identifier;
				break;
			}
		}
		string real_constel = entry.constellation;
		for (auto& c : real_constel) c = toupper(c);

		if (constel_name != real_constel)
		{
			cout << "constellation check failed for star " << entry.name << endl;
			failures++;
		}
		//else
			//cout << "constellation found for star " << entry.name << "(" << constel_name << ")" << endl;
	}
	
	std::cout << "constellation detector failed (but not really) " << failures << " times." << std::endl;
	generated_file.close();

	return 0;
}
